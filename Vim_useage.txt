-----------------------------------------------------------------------------------------------
//一键整理代码缩进对齐
ggvG=
//代码补全
ctrl+p、ctrl+n
//研究vim中的function+map机制

//使用 **匹配任意层级的目录
:e **/foo.txt
------------------------------------------------------------------------------------------------

i                insert模式，按ESC回到Normal模式
x                删除当前光标所在的一个字符
:wq              保存+退出（w:保存，q:退出）
dd               删除当前行，并把删除的行存放到剪贴板里
p                粘贴剪切板

   k
h     l          基本移动操作
   j

:help <command>  显示相关命令帮助

VIM的Normal模式下，所有的键就是功能键，例如，一般Ctrl+c表示拷贝，按下ctrl后，c就不再是c本意了

------------------------------------------------------------------------------------------------

1.插入模式

  a         在光标后插入
  o(小写)        在当前行后插入一个新行
  O(大写)        在当前行前插入一个新行
  cw        替换从光标所在位置后到一个单词结尾的字符
  R(大写)   插入模式，以替换代替插入
  :r {file} 从file中插入

2.简单的移动光标
  0        数字0，移动到行头
  ^        到本行第一个不是blank字符的位置（空格、tab、换行、回车等）
  g_       到本行最后一个不是blank 字符的位置
  $        到本行行尾
  /pattern 搜索pattern的字符串，如果有多个匹配选项，按n向下选择

3.拷贝/粘贴
  p(小写)        在当前位置之后粘贴
  P(大写)        在当前位置之前粘贴
  yy             拷贝当前行，等于 ddP

4.撤消操作
  u                 undo
  ctrl+r            redo

5.打开/保存/退出/改变文件
  :e <path/to/file>         打开一个文件
  :w                        存盘
  :saveas <path/to/file>    另存为<path/to/file>
  :x                        保存并退出
  ZZ                        保存并退出
  :wq                       保存并退出
  :q!                       退出不保存
  :bn 和 :bp                在打开的多个文件之间来回切换

6.打开一个文件的同时并跳转到某一行
  vim filename +n

------------------------------------------------------------------------------------------------

.            重复上一次命令
N<command>   重复某个命令N次

--------------------------------------------------------------------------------------------------

NG           到第N行， ：137(到137行)
gg           到第一行，相当于(1G)或者(:1)
G            到最后一行

按单词移动：
   w      到下一个单词的开头
   e      到下一个单词的结尾

-------------------------------------------------------------------------------------------------

%       匹配括号移动，包括 (,{,[
*和#    匹配光标当前所在的单词，移动光标到下一个(*)或者上一个(#)单词


------------------------------------------------------------------------------------------------

# Search and replace with the `:substitute` (aka `:s`) command

:s/foo/bar/ replace the first match of 'foo' with 'bar' on the current line only
:s/foo/bar/g  replace all matches (`g` flag) of 'foo' with 'bar' on the current line only
:%s/foo/bar/g replace all matches of 'foo' with 'bar' in the entire file (`:%s`)
:%s/foo/bar/gc  ask to manually confirm (`c` flag) each replacement

------------------------------------------------------------------------------------------------

你一定要记住光标的移动，因为很多命令都可以和这些移动光标的命令连动。很多命令都可以如下来干：

<start position><command><end position>

例如 0y$ 命令意味着：

0 → 先到行头
y → 从这里开始拷贝
$ → 拷贝到本行最后一个字符
你可可以输入 ye，从当前位置拷贝到本单词的最后一个字符。

你也可以输入 y2/foo 来拷贝2个 “foo” 之间的字符串。

还有很多时间并不一定你就一定要按y才会拷贝，下面的命令也会被拷贝：

d (删除 )
v (可视化的选择)
gU (变大写)
gu (变小写)
等等
（陈皓注：可视化选择是一个很有意思的命令，你可以先按v，然后移动光标，你就会看到文本被选择，然后，你可能d，也可y，也可以变大写等）

全部变为大写：gggUG //gg:跳转到第一个字符，gU:选定范围全部小写，G:到文件最后一个字符结束                  

在 Insert 模式下，你可以输入一个词的开头，然后按 <C-p>或是<C-n>，自动补齐功能就出现了……





终极技能！！！
------------------------------------------------------------------------------------------------

在当前行上移动光标: 0 ^ $ f F t T , ;
0 → 到行头
^ → 到本行的第一个非blank字符
$ → 到行尾
g_ → 到本行最后一个不是blank字符的位置。
fa → 到下一个为a的字符处，你也可以fs到下一个为s的字符。
t, → 到逗号前的第一个字符。逗号可以变成其它字符。
3fa → 在当前行查找第三个出现的a。
F 和 T → 和 f 和 t 一样，只不过是相反方向。
还有一个很有用的命令是 dt" → 删除所有的内容，直到遇到双引号—— "

--------------------------------------------------------------------------------------------------

区域选择 <action>a<object> 或 <action>i<object>
在visual 模式下，这些命令很强大，其命令格式为

<action>a<object> 和 <action>i<object>

action可以是任何的命令，如 d (删除), y (拷贝), v (可以视模式选择)。
object 可能是： w 一个单词， W 一个以空格为分隔的单词， s 一个句字， p 一个段落。也可以是一个特别的字符："、 '、 )、 }、 ]。
假设你有一个字符串 (map (+) ("foo")).而光标键在第一个 o 的位置。

vi" → 会选择 foo.
va" → 会选择 "foo".
vi) → 会选择 "foo".
va) → 会选择("foo").
v2i) → 会选择 map (+) ("foo")
v2a) → 会选择 (map (+) ("foo"))

--------------------------------------------------------------------------------

块操作: <C-v>
块操作，典型的操作： 0 <C-v> <C-d> I-- [ESC]

^ → 到行头
<C-v> → 开始块操作
<C-d> → 向下移动 (你也可以使用hjkl来移动光标，或是使用%，或是别的)
I-- [ESC] → I是插入，插入“--”，按ESC键来为每一行生效。

---------------------------------------------------------------------------------

宏录制： qa 操作序列 q, @a, @@
qa 把你的操作记录在寄存器 a。
于是 @a 会replay被录制的宏。
@@ 是一个快捷键用来replay最新录制的宏。
示例

在一个只有一行且这一行只有“1”的文本中，键入如下命令：

qaYp<C-a>q→
qa 开始录制
Yp 复制行.
<C-a> 增加1.
q 停止录制.
@a → 在1下面写下 2
@@ → 在2 正面写下3
现在做 100@@ 会创建新的100行，并把数据增加到 103.

---------------------------------------------------------------------------------

可视化选择： v,V,<C-v>
前面，我们看到了 <C-v>的示例 （在Windows下应该是<C-q>），我们可以使用 v 和 V。一但被选好了，你可以做下面的事：

J → 把所有的行连接起来（变成一行）
< 或 > → 左右缩进
= → 自动给缩进 （陈皓注：这个功能相当强大，我太喜欢了）

---------------------------------------------------------------------------------

在所有被选择的行后加上点东西：

<C-v>
选中相关的行 (可使用 j 或 <C-d> 或是 /pattern 或是 % 等……)
$ 到行最后
A, 输入字符串，按 ESC。

---------------------------------------------------------------------------------

分屏: :split 和 vsplit.
下面是主要的命令，你可以使用VIM的帮助 :help split. 你可以参考本站以前的一篇文章VIM分屏

:split → 创建分屏 (:vsplit创建垂直分屏)
<C-w><dir> : dir就是方向，可以是 hjkl 或是 ←↓↑→ 中的一个，其用来切换分屏
<C-w>_ (或 <C-w>|) : 最大化尺寸 (<C-w>| 垂直分屏)
<C-w>+ (或 <C-w>-) : 增加尺寸

--------------------------------------------------------------------------------
vi编辑器中的整行（多行）复制与粘贴    

复制

1）单行复制

    在命令模式下，将光标移动到将要复制的行处，按“yy”进行复制；

    
2）多行复制

    在命令模式下，将光标移动到将要复制的首行处，按“nyy”复制n行；其中n为1、2、3……

    

粘贴

在命令模式下，将光标移动到将要粘贴的行处，按“p”进行粘贴

 



vi复制多行文本的方法

(1)：
光标放到第6行，
输入：2yy
光标放到第9行，
输入：p

       此方法适合复制少量行文本的情况，复制第6行（包括）下面的2行数据，放到第9行下面

(2)：使用标签代替复制 起始、结束、待粘贴 行
光标移动到起始行，输入ma
光标移动到结束行，输入mb
光标移动到粘贴行，输入mc
然后输入 
：'a, 'b co 'c  //复制a-b行至c行
：'a, 'b m 'c  //剪切a-b行至c行
：6, 8 de      //删除6至8行     
：6, 8 co 12 //复制6至8行到12行后面
：6, 8 m 12 //剪切6至8行到12行后面




//////////////////////////////////////////////////////
：set number 查看行号
1、vi a.txt b.txt或者vi *.txt
2、文件间切换
:n切换到下一个文件，:wn保存再切换
:N到上一个文件，:wN保存再切换
:.=看当前行
3、比如在一个文件里:100,200y
4、:n到第二个文件，输入:600到第600行，按p粘贴
（或者输入:600p）
5、退出:wq!

///////////////////////////////////////////////////
统计字符串出现次数
:%s/字符串//ng

/////////////////////////////////////////////////////
vim中tab键和空格键
在.vimrc中添加以下代码后，重启vim即可实现按TAB产生4个空格：
set ts=4  (注：ts是tabstop的缩写，设TAB宽4个空格)
set expandtab

对于已保存的文件，可以使用下面的方法进行空格和TAB的替换：
TAB替换为空格：
:set ts=4
:set expandtab
:%retab!

空格替换为TAB：
:set ts=4
:set noexpandtab
:%retab!

########################## 全局替换 ##########################
:%s/old/new/g

########################## vim折叠设置 ##########################
"zi 打开关闭折叠
"zv 查看此行
zm 关闭折叠
zM 关闭所有
zr 打开
zR 打开所有
zc 折叠当前行
zo 打开当前折叠
zd 删除折叠
zD 删除所有折叠

########################## 函数跳转 ##########################
1. sudo apt-get install exuberant-ctags
2. 在源文件目录树执行：ctags -R .
3. ctrl+]，调到函数定义出

########################## 行内跳转 ##########################
0:  数字0,绝对行首 
^： 跳转至行第一个非空字符 
$： 绝对行尾

########################## 行间跳转 ##########################
gg：跳转到首行
G： 跳到尾行
#G：跳到第#行

########################## 删除 ##########################
x：  删除光标所在处单个字符
#x： 删除光标所在处及以后共#个字符
dd： 删除当前光标所在行
#dd：删除包含当前光标所在行在内的#行

########################## 复制 ##########################
p(小写p)：如果删除的或复制的为整行内容，则粘贴到光标所在行的下方，如果复制或删除的内容为非整行，则粘贴至光标所在字符的后面
P(大写P)：如果删除的或复制的为整行内容，则粘贴到光标所在行的上方，如果复制或删除的内容为非整行，则粘贴至光标所在字符的前面

########################## 撤销操作 ##########################
u：撤销前一次编辑操作
#u：直接撤销#次操作
ctrl+r：撤销最近一次撤销操作

*********************************** vim多文件多窗口切换 **************************************************************
打开多个文件：

(1). vim file1 file2 ...
  vim已经启动
  输入:e file
可以再打开一个文件，并且此时vim里会显示出file文件的内容

(2).同时显示多个文件：
  :sp         //水平切分窗口
  :vsplit     //垂直切分窗口

(3)、在文件之间切换：
  1.文件间切换
    Ctrl+6  //两文件间的切换
    :bn      //下一个文件
    :bp      //上一个文件
    :ls       //列出打开的文件，带编号
    :b1~n  //切换至第n个文件
  对于用(v)split在多个窗格中打开的文件，这种方法只会在当前窗格中切换不同的文件

(4)在窗格间切换的方法
  Ctrl+w+方向键——切换到前／下／上／后一个窗格
  Ctrl+w+h/j/k/l ——同上
  Ctrl+ww——依次向后切换到下一个窗格中

********************************* vim打开目录树 ************************************************
//vim命令模式下
:Explore 当前窗口下打开
:Vexplore or Vex 竖直分割窗口打开
:Sexplore or Sex 水平分割窗口打开

i  切换文件视图

vim /etc  vim后直接跟目录名，打开指定目录

********************************* vim复制文件到剪切板 ************************************************
：1, 600y+  //复制前600行到剪切板, +号代表复制文件到剪切板