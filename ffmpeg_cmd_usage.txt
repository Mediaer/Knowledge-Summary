1. 从一个yuv文件中截取5帧

	//-r 指定抽取的帧率，即从视频中每秒钟抽取图片的数量。1代表每秒抽取一帧
	//-t 代表持续时间，单位为秒
	ffmpeg -s 1920x1080 -i input.yuv -r 1 -t 5 out.yuv


2. yuv444p转换为yuv420p

ffmpeg -s 1280*720 -pix_fmt yuv444p -i input.yuv -pix_fmt yuv420p output.yuv

3. 1080p的yuv420p转化为yuv444p的yuv

ffmpeg.exe -s 1920x1080 -pix_fmt yuv420p  -i  .\test_1080p.yuv -r 5 -t 1 -pix_fmt yuv444p -s 640x480 slt_1080p.yuv

4. 拼接

//拼接yuv
ffmpeg -s 1920x1080 -pix_fmt yuv420p -r 30 -i Trial15_2k_bigmotion.yuv  -s 1920x1080 -pix_fmt yuv420p -r 30 -i Trial15_2k_bigmotion.yuv   -filter_complex '[0:0][1:0] concat=n=2:v=1 [v]' -map '[v]'   -y 2k_bigmotion.yuv


ffmpeg -i 1.mp4 -i 2.mp4 -i 3.mp4 -filter_complex '[0:0] [0:1] [1:0] [1:1] [2:0] [2:1] concat=n=3:v=1:a=1 [v] [a]' -map '[v]' -map '[a]’  output.mp4

    上面的命令合并了三种不同格式的文件，FFmpeg concat 过滤器会重新编码它们。注意这是有损压缩。

    [0:0] [0:1] [1:0] [1:1] [2:0] [2:1] 分别表示第一个输入文件的视频、音频、第二个输入文件的视频、音频、第三个输入文件的视频、音频。concat=n=3:v=1:a=1 表示有三个输入文件，输出一条视频流和一条音频流。[v] [a] 就是得到的视频流和音频流的名字，注意在 bash 等 shell 中需要用引号，防止通配符扩展

5. ffmpeg使用libx264编码

./ffmpeg -s 1920x1080 -i ../test_1080p9s.yuv   -c:v libx264 -x264-params keyint=120:bframes=3:ref=2:qpmin=8:qpmax=51:cabac=1   -frames 240 -b:v 200k -r 30 -y st_200k.264

//ffmpeg PSNR,注意ref yuv和 decode yuv不一致的情况导致psnr值过低
ffmpeg  -s 1920x1080 -pix_fmt yuv420p -i compare.yuv -s 1920x1080  -pix_fmt yuv420p  -i reference.yuv   -lavfi "ssim;[0:v][1:v]psnr" -f null -

//ffmpeg PSNR
ffmpeg -s 3840x2160   -i  input.yuv  -c:v libx264 -x264-params keyint=120:bframes=0:ref=2:qpmin=8:qpmax=51:cabac=1:minrate=800k:maxrate=800k:vbv-maxrate=800k:vbv-bufsize=1600k   -frames 30  -r 30 -y 4k_ffmpeg_800k.264   -psnr


//ffmpeg libx264 encoder
//设置minrate、maxrate相等，控制输出为恒定码率1500k, vbv-bufsize为vbv-maxrate 2倍大小,这样才可以得到期望的目标码率
ffmpeg -s 1920x1080   -i  input.yuv  -c:v libx264 -x264-params keyint=120:bframes=0:ref=2:qpmin=8:qpmax=51:cabac=1:minrate=1500k:maxrate=1500k:vbv-maxrate=1500k:vbv-bufsize=3000k   -frames 240  -r 30 -y 1500k_ffmpeg.264





